{"version":3,"sources":["src/admin.ts","src/app.ts","src/environment.ts","src/main.ts","src/user.ts","src/resources/index.ts","src/services/FetchClient.ts","src/services/authMessages.ts","src/services/fetchConfig.ts","src/services/fetchConfigLocal.ts","src/services/timelineMessage.ts","src/services/updateMessages.ts","src/services/svc/adminService.ts","src/services/svc/imageService.ts","src/viewmodels/logout/logout.ts","src/services/svc/tweet/tweetData.ts","src/services/svc/tweet/tweetDeleter.ts","src/services/svc/tweet/tweetService.ts","src/services/svc/tweet/tweetUtils.ts","src/services/svc/user/updateService.ts","src/services/svc/user/userData.ts","src/services/svc/user/userService.ts","src/services/svc/user/userUtils.ts","src/viewmodels/admin/manageTweets/manageTweets.ts","src/viewmodels/admin/manageUsers/manageUsers.ts","src/viewmodels/admin/statistics/statistics.ts","src/viewmodels/start/loginAdmin/loginAdmin.ts","src/viewmodels/start/notLoggedIn/notLoggedIn.ts","src/viewmodels/start/signup/signup.ts","src/viewmodels/user/actionTimeline/actionTimeline.ts","src/viewmodels/user/friends/friend.ts","src/viewmodels/user/friends/friendsSidebar.ts","src/viewmodels/user/tweetTimeline/TweetWrapper.ts","src/viewmodels/user/tweetTimeline/asyncBindingBehavior.ts","src/viewmodels/user/tweetTimeline/currency-format.ts","src/viewmodels/user/tweetTimeline/timelineDesc.ts","src/viewmodels/user/tweetTimeline/tweetTimeline.ts","src/viewmodels/user/userSettings/userSettings.ts","src/services/svc/admin/adminData.ts","src/services/svc/admin/adminService.ts","src/viewmodels/admin/manageUsers/UserWrapper.ts","src/services/svc/user/userDeleter.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject, Aurelia} from 'aurelia-framework';\n\n@inject(Aurelia)\nexport class Admin {\n\n  aurelia;\n  router;\n\n  constructor(au) {\n    this.aurelia = au;\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      {\n        route: ['', 'home'],\n        name: 'statistics',\n        moduleId: 'viewmodels/admin/statistics/statistics',\n        nav: true,\n        title: 'Statistics'\n      },\n      {route: 'users', name: 'users', moduleId: 'viewmodels/admin/manageUsers/manageUsers', nav: true, title: 'Users'},\n      {\n        route: 'tweets',\n        name: 'tweets',\n        moduleId: 'viewmodels/admin/manageTweets/manageTweets',\n        nav: true,\n        title: 'Tweets'\n      },\n      {route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout'}\n    ]);\n    this.router = router;\n\n    config.mapUnknownRoutes({ redirect: '#/' });\n\n  }\n}\n","import {Aurelia, inject, LogManager} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {AuthRole, FailedLogin, ILoginMessage, LoginMessage} from \"./services/authMessages\";\nimport {UpdateService} from \"./services/svc/user/updateService\";\n\nconst logger = LogManager.getLogger('app');\n\n@inject(Aurelia, EventAggregator, UpdateService)\nexport class App {\n\n  router;\n\n  constructor(au: Aurelia, ea: EventAggregator, updateService: UpdateService) {\n    ea.subscribe(LoginMessage, (msg: ILoginMessage) => {\n      if (msg.success === true) {\n        if (msg.role === AuthRole.USER) {\n          au.setRoot('user').then(() => {\n              this.router.navigateToRoute('twTimeline');\n              updateService.fetchUserData(msg.id).catch((err) =>\n                logger.error('Error during update of user.', err)\n              );\n            }\n          );\n        }\n        if (msg.role === AuthRole.ADMIN) {\n          au.setRoot('admin').then(() => {\n            this.router.navigateToRoute('statistics');\n          });\n        }\n      } else {\n        au.setRoot('app').then(() => {\n            this.router.navigateToRoute('twittr');\n            if (msg.failed) {\n              ea.publish(new FailedLogin(msg.role, msg.message));\n            }\n          }\n        );\n      }\n    });\n  }\n\n\n  configureRouter(config, router) {\n    config.map([\n      {\n        route: ['', 'home'],\n        name: 'twittr',\n        moduleId: 'viewmodels/start/notLoggedIn/notLoggedIn',\n        nav: true,\n        title: 'Twittr'\n      },\n      {route: 'signup', name: 'signup', moduleId: 'viewmodels/start/signup/signup', nav: true, title: 'Signup'},\n      {\n        route: 'adminLogin',\n        name: 'adminLogin',\n        moduleId: 'viewmodels/start/loginAdmin/loginAdmin',\n        nav: true,\n        title: 'Admin'\n      }\n    ]);\n    this.router = router;\n\n    config.mapUnknownRoutes({redirect: '#/'});\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-validation');\n    //.plugin('aurelia-dialog');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject, Aurelia} from 'aurelia-framework';\n\n@inject(Aurelia)\nexport class User {\n\n  aurelia;\n  router;\n\n  constructor(au) {\n    this.aurelia = au;\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      {\n        route: ['', 'home'],\n        name: 'twTimeline',\n        moduleId: 'viewmodels/user/tweetTimeline/tweetTimeline',\n        nav: true,\n        title: 'Timeline'\n      },\n      {\n        route: 'settings',\n        name: 'settings',\n        moduleId: 'viewmodels/user/userSettings/userSettings',\n        nav: true,\n        title: 'Settings'\n      },\n      {route: 'logout', name: 'logout', moduleId: 'viewmodels/logout/logout', nav: true, title: 'Logout'}\n    ]);\n    this.router = router;\n\n    config.mapUnknownRoutes({redirect: '#/'});\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport FetchConfig from \"./fetchConfigLocal\";\nimport {buildQueryString} from 'aurelia-path';\n\nconst logger = LogManager.getLogger('FetchClient');\n\nexport class QueryObject {\n  name: string;\n  value: any;\n\n  constructor(name: string, value: any) {\n    this.name = name;\n    this.value = value;\n  }\n}\n\n@inject(HttpClient, FetchConfig)\nexport class FetchClient {\n\n  fetchClient: HttpClient;\n  static authToken?: string;\n\n  constructor(client: HttpClient, fetchConfig: FetchConfig) {\n    this.fetchClient = client;\n    this.fetchClient.configure(config => {\n      config.withBaseUrl(fetchConfig.baseUrl)\n        .withDefaults({\n          mode: 'cors'\n        }).withInterceptor({\n        request(request: Request) {\n\n          // null or undefined\n          if (FetchClient.authToken != null) {\n            request.headers.append('Authorization', `Bearer ${FetchClient.authToken}`);\n          }\n          return request;\n        },\n      })\n    })\n  }\n\n\n  static setAuthToken(token: string) {\n    FetchClient.authToken = token;\n  }\n\n\n  async postJSON(targetUrl, object) {\n    return this.sendPost(targetUrl, json(object))\n  }\n\n  async postForm(targetUrl, formData: FormData) {\n    return this.sendPost(targetUrl, formData);\n  }\n\n  private async sendPost(targetUrl, body) {\n    FetchClient.logRequestStart(targetUrl);\n\n    const fetchResult: Response = await this.fetchClient.fetch(targetUrl, {\n      method: 'post',\n      body: body\n    });\n\n    if (!fetchResult.ok) {\n      await this.handleNotOkResponse(fetchResult);\n    }\n\n    const jsonResponse = await fetchResult.json();\n    FetchClient.logSuccess(targetUrl, fetchResult.status);\n    return jsonResponse;\n  }\n\n\n  async getText(targetUrl, query: any) {\n    FetchClient.logRequestStart(targetUrl);\n    const fetchResult: Response = await this.sendGet(targetUrl, query);\n\n    let result;\n    try {\n      result = await fetchResult.text();\n    } catch (error){\n      logger.error('Could not fetch result as text', fetchResult, error);\n      throw error;\n    }\n    FetchClient.logSuccess(targetUrl, fetchResult.status);\n    return result;\n  }\n\n\n  async get(targetUrl, query: any) {\n    FetchClient.logRequestStart(targetUrl);\n    const fetchResult: Response = await this.sendGet(targetUrl, query);\n\n    let result;\n    try {\n      result = await fetchResult.json();\n    } catch (error){\n      logger.error('Could not fetch result as json', fetchResult, error);\n      throw error;\n    }\n    FetchClient.logSuccess(targetUrl, fetchResult.status);\n    return result;\n  }\n\n  async sendGet(targetUrl: string, query:any) {\n    const fetchResult: Response = await this.fetchClient.fetch(targetUrl + (query ? `?${buildQueryString(query)}` : ''));\n\n    if (!fetchResult.ok) {\n      this.handleNotOkResponse(fetchResult);\n    }\n\n    return fetchResult;\n  }\n\n  async put(targetUrl: string, object: any) {\n    FetchClient.logRequestStart(targetUrl);\n\n    const fetchResult: Response = await this.fetchClient.fetch(targetUrl, {\n      method: 'put',\n      body: json(object)\n    });\n\n    if (!fetchResult.ok) {\n      this.handleNotOkResponse(fetchResult);\n    }\n\n    try {\n      const result = fetchResult.json();\n      FetchClient.logSuccess(targetUrl, fetchResult.status);\n      return result;\n    } catch (error) {\n      logger.error('Unable to read fetch result', error);\n      throw error;\n    }\n  }\n\n  async delete(targetUrl: string, query: any) {\n    FetchClient.logRequestStart(targetUrl);\n\n    const fetchResult: Response = await this.fetchClient.fetch(targetUrl + (query ? `?${buildQueryString(query)}` : ''), {\n      method: 'delete'\n    });\n\n    if (!fetchResult.ok) {\n      this.handleNotOkResponse(fetchResult);\n    }\n\n    try {\n      const result = fetchResult.json();\n      FetchClient.logSuccess(targetUrl, fetchResult.status);\n      return result;\n    } catch (error) {\n      logger.error('Unable to read fetch result', error);\n      throw error;\n    }\n  }\n\n\n  handleNotOkResponse(response: Response) {\n\n  }\n\n\n  static logRequestStart(url: string) {\n    logger.info(`Started request to: [${url}]`);\n  }\n\n\n  static logSuccess(url: string, status: number) {\n    logger.info(`Received valid response for url: [${url}] status: [${status}]`)\n  }\n\n}\n","export enum AuthRole {\n  USER,\n  ADMIN\n}\n\nexport interface ILoginMessage {\n  role: AuthRole,\n  success: boolean\n  failed: boolean\n  message?: string\n  id?: string\n}\n\nexport class LoginMessage implements ILoginMessage {\n  role: AuthRole;\n  success: boolean;\n  failed: boolean;\n  message?: string;\n  id?: string;\n\n  constructor(role: AuthRole, success: boolean, failed: boolean) {\n    this.role = role;\n    this.success = success;\n    this.failed = failed;\n  }\n\n}\n\nexport class FailedLogin {\n\n  role: AuthRole;\n  message?: string;\n\n  constructor(role: AuthRole, message: string) {\n    this.role = role;\n    this.message = message;\n  }\n\n}\n\n","export default class FetchConfig {\n\n  baseUrl: string = \"https://node-js-twitter-backend.herokuapp.com/api/\";\n  usersPart: string = \"users\";\n  adminsPart: string = \"admins\";\n  tweetsPart: string = \"tweets\";\n  imagePart: string = \"images\";\n  authPart: string = \"/authenticate\";\n\n}\n","export default class FetchConfig {\n\n  baseUrl: string = \"http://localhost:4000/api/\";\n  usersPart: string = \"users\";\n  adminsPart: string = \"admins\";\n  tweetsPart: string = \"tweets\";\n  imagePart: string = \"images\";\n  authPart: string = \"/authenticate\";\n}\n","import {IUser} from \"./svc/user/userUtils\";\n\nexport class SwitchToFriend {\n\n  friend: IUser;\n\n  constructor(friend: IUser) {\n    this.friend = friend;\n  }\n\n}\n","export class UpdateSuccess {\n\n}\n\nexport class UpdateRequest {\n  id: string;\n\n  constructor(id: string) {\n    this.id = id;\n  }\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {FetchClient} from '../FetchClient';\nimport FetchConfig from '../fetchConfigLocal'\nimport {AuthRole, LoginMessage} from \"../authMessages\";\n\nconst logger = LogManager.getLogger('AdminService');\n\n@inject(EventAggregator, FetchClient, FetchConfig)\nexport class AdminService {\n\n  fetchClient: FetchClient;\n  eventAggregator: EventAggregator;\n  fetchConfig: FetchConfig;\n\n\n  constructor(ea: EventAggregator, fetchClient: FetchClient, fetchConfig: FetchConfig) {\n    this.eventAggregator = ea;\n    this.fetchClient = fetchClient;\n    this.fetchConfig = fetchConfig;\n  }\n\n  async authenticate(username: string, password: string) {\n    const authBody = {\n      username: username,\n      password: password\n    };\n\n    const authUrl = this.fetchConfig.adminsPart + this.fetchConfig.authPart;\n\n    this.fetchClient.postJSON(authUrl, authBody).then(authResult => {\n      if (authResult.success && authResult.token) {\n        FetchClient.setAuthToken(authResult.token);\n        this.eventAggregator.publish(new LoginMessage(AuthRole.ADMIN, true));\n      } else {\n        const loginEvent = new LoginMessage(AuthRole.ADMIN, false);\n        if (authResult.message) {\n          loginEvent.message = authResult.message;\n        }\n        this.eventAggregator.publish(loginEvent);\n        throw loginEvent;\n      }\n    }).catch(err => {\n      if (err) {\n        logger.error('Error during authentication', err);\n      }\n      const loginEvent = new LoginMessage(AuthRole.ADMIN, false);\n      if (err.message) {\n        loginEvent.message = err.message;\n      }\n\n      this.eventAggregator.publish(loginEvent);\n      if (err) {\n        throw err;\n      }\n    })\n  }\n\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {FetchClient} from \"../FetchClient\";\nimport FetchConfig from \"../fetchConfigLocal\";\n\nconst logger = LogManager.getLogger('ImageService');\n\n@inject(FetchClient, FetchConfig)\nexport class ImageService {\n\n  constructor(private fetchClient: FetchClient, private fetchConfig: FetchConfig) {\n\n  }\n\n  async saveImage(image: File) {\n    if (!image) {\n      logger.warn('Image to save was null.');\n      return null;\n    }\n    const formData: FormData = new FormData();\n    formData.append('image', image);\n\n    try {\n      const uploadResult = await this.fetchClient.postForm(this.fetchConfig.imagePart, formData);\n      if (uploadResult && uploadResult.public_id) {\n        return uploadResult.public_id;\n      } else {\n        logger.error('Img Upload result hat not expected parameters', uploadResult);\n        return null;\n      }\n    } catch (exception) {\n      logger.error('Exception during upload of image.', exception);\n      return null;\n    }\n  }\n\n  async getUrlForImageId(imageId: string) {\n\n    if (!imageId) {\n      logger.warn('Required image public id is null');\n      return null;\n    }\n\n    const queryObj = {\n      publicId: imageId\n    };\n\n    try {\n      return await this.fetchClient.getText(this.fetchConfig.imagePart, queryObj);\n    } catch (err) {\n      logger.error('Exception during fetch of image url.', err);\n      return null;\n    }\n  }\n\n}\n","import {inject} from 'aurelia-framework'\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginMessage} from \"../../services/authMessages\";\nimport {UserData} from \"../../services/svc/user/userData\";\nimport {AdminData} from \"../../services/svc/admin/adminData\";\n\n@inject(EventAggregator, UserData, AdminData)\nexport class Logout {\n\n  eventAggregator: EventAggregator;\n\n  constructor(ea: EventAggregator, private userData: UserData, private adminData: AdminData) {\n    this.eventAggregator = ea;\n  }\n\n  logout() {\n    this.adminData.allUsers = null;\n    this.userData.loggedInUser = null;\n    this.userData.userFriends = null;\n    this.userData.allUsers = null;\n    this.eventAggregator.publish(new LoginMessage(null, false, false));\n  }\n\n}\n","import {ITweet} from \"./tweetUtils\";\n\nexport class TweetData {\n  tweets: ITweet[];\n  tweetsByFriend: Map<string, ITweet>;\n  allTweets: ITweet[];\n\n}\n","import {inject} from 'aurelia-framework';\nimport {TweetService} from \"./tweetService\";\nimport {UserService} from \"../user/userService\";\nimport {ITweet} from \"./tweetUtils\";\nimport {IUser} from \"../user/userUtils\";\n\n@inject(TweetService, UserService)\nexport class TweetDeleter {\n\n  constructor(private tweetService: TweetService, private userService: UserService) {\n\n  }\n\n  public async deleteTweets(tweets: ITweet[], updateUsers: boolean) {\n    if (!Array.isArray(tweets)) {\n      return;\n    }\n\n    if (updateUsers) {\n      const usersToUpdate: IUser[] = this.getUsersToUpdate(tweets);\n      await this.updateUsers(usersToUpdate);\n    }\n    await this.tweetService.deleteTweets(tweets);\n\n    return;\n  }\n\n\n\n  private getUsersToUpdate(tweets: ITweet[]) {\n    if (!Array.isArray(tweets)) {\n      return;\n    }\n\n    const usersToUpdate: IUser[] = [];\n    for (const tweet of tweets) {\n      let user = usersToUpdate.find((foundUser: IUser) => {\n        return foundUser.id === tweet.poster.id;\n      });\n\n      if (!user) {\n        user = tweet.poster;\n        usersToUpdate.push(user);\n      }\n\n      const tweetIndex = user.tweets.findIndex((foundTweet: ITweet) => {\n        return foundTweet.id === tweet.id;\n      });\n\n      if (tweetIndex !== -1) {\n        user.tweets.splice(tweetIndex, 1);\n      }\n    }\n\n    return usersToUpdate;\n  }\n\n  private async updateUsers(users: IUser[]) {\n    if (!Array.isArray(users)) {\n      return;\n    }\n\n    const updatedUsers: Promise<boolean>[] = [];\n    for (const toUpdate of users) {\n      updatedUsers.push(this.userService.updateUser(toUpdate, true));\n    }\n\n    await Promise.all(updatedUsers);\n\n    return;\n  }\n\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {FetchClient, QueryObject} from \"../../FetchClient\";\nimport FetchConfig from \"../../fetchConfigLocal\";\nimport {TweetData} from \"./tweetData\";\nimport {ITweet, TweetUtils} from \"./tweetUtils\";\nimport {ImageService} from \"../imageService\";\nimport {UserData} from \"../user/userData\";\nimport {IUser} from \"../user/userUtils\";\n\nconst logger = LogManager.getLogger('TweetService');\n\n@inject(FetchClient, FetchConfig, ImageService, UserData)\nexport class TweetService {\n\n  fetchClient: FetchClient;\n  fetchConfig: FetchConfig;\n\n  userData: UserData;\n\n  constructor(fetchClient: FetchClient, fetchConfig: FetchConfig, private imageService: ImageService, ud: UserData) {\n    this.fetchClient = fetchClient;\n    this.fetchConfig = fetchConfig;\n    this.userData = ud;\n  }\n\n  async getTweetsById(ids: string[]) {\n    try {\n      const plainTweets = await this.fetchClient.get(this.fetchConfig.tweetsPart, {ids: ids});\n      if (!Array.isArray(plainTweets)) {\n        logger.error('Fetched tweet array is no array.');\n        return null;\n      }\n      const tweets: ITweet[] = [];\n      for (const plainTweet of plainTweets) {\n        const tweet: ITweet = TweetUtils.mapToTweet(plainTweet);\n        tweets.push(tweet);\n      }\n      return tweets;\n    } catch (error) {\n      logger.error('Can not fetch tweets', error);\n      return null;\n    }\n  }\n\n  async createTweet(image: File, content: string) {\n    let imageId = null;\n    if (image) {\n      imageId = await this.imageService.saveImage(image);\n    }\n\n    const tweetData = {\n      content: content,\n      poster: this.userData.loggedInUser.id,\n      upvotes: 0,\n    };\n\n    if (imageId) {\n      tweetData['image'] = imageId;\n    }\n\n    try {\n      const result = await this.fetchClient.postJSON(this.fetchConfig.tweetsPart, tweetData);\n      const newTweet = TweetUtils.mapToTweet(result);\n      newTweet.poster = this.userData.loggedInUser;\n      return newTweet;\n    } catch (err) {\n      logger.error('Error during creation of tweet.', err);\n      return null;\n    }\n  }\n\n  async deleteTweets(tweets: ITweet[]) {\n    if (!Array.isArray(tweets)) {\n      return;\n    }\n\n    const idArr: string[] = [];\n    for (const tweet of tweets) {\n      idArr.push(tweet.id);\n    }\n\n    try {\n      return await this.fetchClient.delete(this.fetchConfig.tweetsPart, {ids: idArr});\n    } catch (err) {\n      logger.error('Error during deleting tweets.', err);\n      return false;\n    }\n\n  }\n\n}\n","import {IUser} from \"../user/userUtils\";\n\nexport interface ITweet {\n\n  id: string,\n  updatedAt: string,\n  createdAt: string\n\n  content: string,\n  image?: string,\n  poster: IUser,\n  upvotes: number\n\n}\n\nexport class Tweet implements ITweet {\n  id: string;\n  updatedAt: string;\n  createdAt: string;\n\n  content: string;\n  poster: IUser;\n  upvotes: number;\n\n  image?: string;\n\n  constructor(id: string, updatedAt: string, createdAt: string, content: string, poster: IUser, upvotes: number) {\n    this.id = id;\n    this.updatedAt = updatedAt;\n    this.createdAt = createdAt;\n    this.content = content;\n    this.poster = poster;\n    this.upvotes = upvotes;\n  }\n\n}\n\nexport class TweetUtils {\n\n  public static mapToTweet(object: any) {\n    if (!object) {\n      return null;\n    }\n\n    const tweetObject: ITweet = Object.assign({}, object);\n    if (object._id) {\n      tweetObject.id = object._id;\n    }\n    return tweetObject;\n\n  }\n\n  public static dePopulateUser(tweet: ITweet) {\n    if (!tweet) {\n      return null;\n    }\n\n    const posterId: any = tweet.poster.id;\n    tweet.poster = posterId;\n    return tweet;\n  }\n\n  public static mapFromTweet(tweet: ITweet) {\n    if (!tweet) {\n      return null;\n    }\n\n    let newObject: any = this.dePopulateUser(tweet);\n    delete newObject._v0;\n    delete newObject.id;\n    delete newObject._id;\n    delete newObject.createdAt;\n    delete newObject.updatedAt;\n    return newObject;\n  }\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {UserService} from \"./userService\";\nimport {TweetService} from \"../tweet/tweetService\";\nimport {UserData} from \"./userData\";\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UpdateRequest, UpdateSuccess} from \"../../updateMessages\";\nimport {AdminData} from \"../admin/adminData\";\n\nconst logger = LogManager.getLogger('UpdateService');\n\n@inject(UserService, TweetService, UserData, EventAggregator, AdminData)\nexport class UpdateService {\n\n  userData: UserData;\n\n  constructor(private userService: UserService, private TweetService: TweetService, userData: UserData,\n              private ea: EventAggregator, private adminData: AdminData) {\n    this.userData = userData;\n\n    ea.subscribe(UpdateRequest, (request: UpdateRequest) => {\n      if (request && request.id) {\n        this.fetchUserData(request.id).then(() => {\n          logger.info('Update successfull');\n        }).catch(err => {\n          logger.error('Error during update', err);\n        });\n      }\n    })\n  }\n\n  async fetchUserData(id: string) {\n    try {\n      this.userData.loggedInUser = await this.userService.getUserById(id);\n      this.loadAllUsers().then(() => {\n        logger.info('Loaded all users.')\n      }).catch(err => {\n        logger.error('Error on all users update.', err);\n      });\n      this.userData.userFriends = [];\n      if (this.userData.loggedInUser.following.length > 0) {\n        this.userData.userFriends = await this.userService.getUsersById(this.userData.loggedInUser.following);\n      }\n      this.ea.publish(new UpdateSuccess());\n      logger.info('Finished fetching user data.');\n    } catch (err) {\n      logger.error(\"Error during user data fetch.\", err);\n    }\n  }\n\n  /**\n   * Potential performance liability\n   * Implement paging after over 50-100 users\n   */\n  async loadAllUsers() {\n    logger.info('Started loading all users.');\n    console.time('fetchAllUsers');\n    try {\n      this.userData.allUsers = await this.userService.getUsersById(null);\n    } catch (error) {\n      logger.error('Error during fetch of all users.', error);\n      throw error;\n    } finally {\n      console.timeEnd('fetchAllUsers');\n      logger.info('Finished loading all users;');\n    }\n  }\n\n  async updateAdminData() {\n    logger.info('Started loading all users.');\n    console.time('updateAdmin');\n    try {\n      this.adminData.allUsers = await this.userService.getUsersById(null);\n    } catch (error) {\n      logger.error('Error during fetch of all users.', error);\n      throw error;\n    } finally {\n      console.timeEnd('updateAdmin');\n      logger.info('Finished loading all users;');\n    }\n  }\n}\n","import {IUser} from \"./userUtils\";\n\nexport class UserData {\n\n  loggedInUser: IUser;\n  userFriends: IUser[];\n  allUsers: IUser[];\n\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator'\nimport {FetchClient} from \"../../FetchClient\";\nimport FetchConfig from \"../../fetchConfigLocal\";\nimport {AuthRole, LoginMessage} from \"../../authMessages\";\nimport {IUser, UserUtils} from \"./userUtils\";\nimport {TweetService} from \"../tweet/tweetService\";\nimport {ITweet} from \"../tweet/tweetUtils\";\nimport {UpdateRequest} from \"../../updateMessages\";\n\nconst logger = LogManager.getLogger('UserService');\n\n@inject(EventAggregator, FetchClient, FetchConfig, TweetService)\nexport class UserService {\n\n  eventAggregator: EventAggregator;\n  fetchClient: FetchClient;\n  fetchConfig: FetchConfig;\n\n  constructor(ea: EventAggregator, fetchClient: FetchClient, fetchConfig: FetchConfig, private tweetService: TweetService) {\n    this.eventAggregator = ea;\n    this.fetchClient = fetchClient;\n    this.fetchConfig = fetchConfig;\n  }\n\n  async authenticate(email, password) {\n    const authBody = {\n      email: email,\n      password: password\n    };\n\n    const authUrl = this.fetchConfig.usersPart + this.fetchConfig.authPart;\n\n    try {\n      const authResult = await this.fetchClient.postJSON(authUrl, authBody);\n      if (authResult.success && authResult.token) {\n        this.handleAuthSuccess(authResult);\n      } else {\n        const loginEvent = new LoginMessage(AuthRole.USER, false, true);\n        if (authResult.message) {\n          loginEvent.message = authResult.message;\n        }\n        this.eventAggregator.publish(loginEvent);\n      }\n    } catch (err) {\n      this.handleAuthError(err);\n    }\n  }\n\n  handleAuthSuccess(authResult) {\n    FetchClient.setAuthToken(authResult.token);\n    const loginMessage = new LoginMessage(AuthRole.USER, true, true);\n    if (authResult) {\n      loginMessage.id = authResult.id;\n    }\n    this.eventAggregator.publish(loginMessage);\n  }\n\n  handleAuthError(err) {\n    if (err) {\n      logger.error('Error during authentication', err);\n    }\n    const loginEvent = new LoginMessage(AuthRole.USER, false, true);\n    if (err.message) {\n      loginEvent.message = err.message;\n    }\n\n    this.eventAggregator.publish(loginEvent);\n  }\n\n  async signUp(username: string, email: string, password: string, firstName: string, lastName: string, loginAfter: boolean) {\n    const signupBody = {\n      username: username,\n      email: email,\n      password: password,\n      firstName: firstName,\n      lastName: lastName\n    };\n\n    try {\n      await this.fetchClient.postJSON(this.fetchConfig.usersPart, signupBody);\n\n      if (loginAfter) {\n        await this.authenticate(email, password);\n      }\n      return true;\n    } catch (exception) {\n      logger.error('Exception during signup.', exception);\n      throw exception;\n    }\n  }\n\n  async getUserById(id: string) {\n    try {\n      const plainUser = await this.fetchClient.get(`${this.fetchConfig.usersPart}/${id}`, null);\n      const user: IUser = await this.populateTweets(plainUser);\n      return user;\n    } catch (error) {\n      logger.error('Error during fetch of user.', error);\n      throw error;\n    }\n  }\n\n  async getUsersById(ids: string[]) {\n    try {\n      const plainUsers = await this.fetchClient.get(this.fetchConfig.usersPart, {ids: ids});\n      if (!Array.isArray(plainUsers)) {\n        logger.error('Fetched user array is no array.');\n        return null;\n      }\n      let users: IUser[];\n      const populationPromise: Promise<IUser>[] = [];\n      for (const plainUser of plainUsers) {\n        populationPromise.push(this.populateTweets(plainUser));\n      }\n      users = await Promise.all(populationPromise);\n      return users;\n    } catch (err) {\n      logger.error('Could not fetch users by id', err);\n      return null;\n    }\n  }\n\n  async updateUser(user: IUser, preventDataUpdate: boolean) {\n    if (!user) {\n      return;\n    }\n    const id = JSON.parse(JSON.stringify(user.id));\n    const toUpdate = UserUtils.mapFromUser(user);\n    try {\n      const updateResult = await this.fetchClient.put(`${this.fetchConfig.usersPart}/${id}`, toUpdate);\n      if (!preventDataUpdate) {\n        this.eventAggregator.publish(new UpdateRequest(id));\n      }\n      return true;\n    } catch (err) {\n      logger.error('Error during update of user', err);\n      return false;\n    }\n  }\n\n  async populateTweets(plainUser: any) {\n    if (!plainUser || !(Array.isArray(plainUser.tweets))) {\n      const errMsg = 'User does not contain required tweet-id array.';\n      logger.error(errMsg);\n      throw errMsg;\n    }\n\n    const user: IUser = UserUtils.mapToUser(plainUser);\n    let tweets: ITweet[] = [];\n    if (plainUser.tweets.length > 0) {\n      tweets = await this.tweetService.getTweetsById(plainUser.tweets);\n      for (const tweet of tweets) {\n        tweet.poster = user;\n      }\n    }\n\n    user.tweets = tweets;\n    return user;\n  }\n\n  async deleteUsers(users: IUser[]) {\n    if (! Array.isArray(users)) {\n      return;\n    }\n\n    const userIds:string[] = [];\n    for (const user of users) {\n      if (!user.id) {\n        continue;\n      }\n      userIds.push(user.id);\n    }\n\n    try {\n      await this.fetchClient.delete(this.fetchConfig.usersPart, {ids: userIds});\n      return true;\n    } catch (error) {\n      logger.error('Error during deletion of users.', error);\n      throw error;\n    }\n  }\n}\n","import {ITweet} from \"../tweet/tweetUtils\";\nexport interface IUser {\n  id: string,\n  updatedAt: string,\n  createdAt: string\n\n  username: string,\n  email: string,\n  password: string,\n  firstName: string,\n  lastName: string\n\n  tweets?: ITweet[],\n  following?: string[]\n}\n\nexport class User implements IUser {\n  id: string;\n  updatedAt: string;\n  createdAt: string;\n\n  username: string;\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n\n  tweets?: ITweet[];\n  following?: string[];\n\n  constructor(id: string, updatedAt: string, createdAt: string, username: string, email: string, password: string, firstName: string, lastName: string) {\n    this.id = id;\n    this.updatedAt = updatedAt;\n    this.createdAt = createdAt;\n    this.username = username;\n    this.email = email;\n    this.password = password;\n    this.firstName = firstName;\n    this.lastName = lastName;\n\n    this.tweets = [];\n    this.following = [];\n  }\n\n\n}\n\n\nexport class UserUtils {\n\n  public static isInstanceOfUser(object: any): object is IUser {\n    return 'member' in object;\n  }\n\n  public static mapToUser(object: any) {\n    if (!object) {\n      return null;\n    }\n\n    const userObject: User = Object.assign({}, object);\n    if (object._id) {\n      userObject.id = object._id;\n    }\n    return userObject;\n\n  }\n\n  public static dePopulateTweets(user: IUser) {\n    if (!user) {\n      return;\n    }\n\n    const tweets = [];\n    for (const tweet of user.tweets) {\n      tweets.push(tweet.id);\n    }\n\n    user.tweets = tweets;\n    return user;\n  }\n\n  public static mapFromUser(user: IUser) {\n    if (!user) {\n      return null;\n    }\n\n    const changedObject: any = this.dePopulateTweets(user);\n    const newObject = JSON.parse(JSON.stringify(changedObject));\n    delete newObject.__v;\n    delete newObject.id;\n    delete newObject._id;\n    delete newObject.createdAt;\n    delete newObject.updatedAt;\n    return newObject;\n  }\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {BindingEngine} from 'aurelia-binding';\nimport {AdminData} from \"../../../services/svc/admin/adminData\";\nimport {TweetDeleter} from \"../../../services/svc/tweet/tweetDeleter\";\nimport {UpdateService} from \"../../../services/svc/user/updateService\";\nimport {ITweet} from \"../../../services/svc/tweet/tweetUtils\";\n\nconst logger = LogManager.getLogger('ManageTweets');\n\n@inject(AdminData, TweetDeleter, UpdateService, BindingEngine)\nexport class ManageTweets {\n\n  tweets: ITweet[];\n  selectedTweets: ITweet[];\n\n  constructor(private adminData: AdminData, private tweetDeleter: TweetDeleter, private updateService: UpdateService,\n              be: BindingEngine) {\n\n    be.propertyObserver(this.adminData, 'allUsers').subscribe(() => {\n      this.update();\n    });\n  }\n\n  attached() {\n    this.update();\n  }\n\n  private update() {\n    if (!this.adminData || ! Array.isArray(this.adminData.allUsers)) {\n      return;\n    }\n\n    this.tweets = [];\n    this.selectedTweets = [];\n    for (const user of this.adminData.allUsers) {\n      this.tweets = this.tweets.concat(user.tweets);\n    }\n  }\n\n  public async deleteTweets() {\n    if (!Array.isArray(this.selectedTweets) || this.selectedTweets.length <= 0) {\n      return;\n    }\n\n    try {\n      await this.tweetDeleter.deleteTweets(this.selectedTweets, true);\n      await this.updateService.updateAdminData();\n    } catch (err) {\n      logger.error('Error during tweet deletion.', err);\n    }\n  }\n\n}\n","import {inject, LogManager} from \"aurelia-framework\";\nimport {UserService} from \"../../../services/svc/user/userService\";\nimport {BindingEngine} from 'aurelia-binding';\nimport {AdminData} from \"../../../services/svc/admin/adminData\";\nimport {UserDeleter} from \"../../../services/svc/user/userDeleter\";\nimport {IUser} from \"../../../services/svc/user/userUtils\";\nimport {UpdateService} from \"../../../services/svc/user/updateService\";\nimport {Signup} from \"../../start/signup/signup\";\nimport {ValidationController, ValidationRules} from \"aurelia-validation\";\n\nconst logger = LogManager.getLogger('ManageUsers');\n\n@inject(AdminData, UserService, BindingEngine, UserDeleter, UpdateService, ValidationController)\nexport class ManageUsers {\n\n  users: IUser[];\n  selectedUsers: IUser[];\n\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n\n\n  constructor(private adminData: AdminData, private userService: UserService, be: BindingEngine,\n              private userDeleter: UserDeleter, private updateService: UpdateService, private controller: ValidationController) {\n\n    ValidationRules\n      .ensure((s: Signup) => s.username).required().minLength(4)\n      .ensure((s: Signup) => s.password).required().minLength(5)\n      .ensure((s: Signup) => s.email).required().email()\n      .ensure((s: Signup) => s.firstName).required()\n      .ensure((s: Signup) => s.lastName).required()\n      .on(this);\n\n    be.propertyObserver(this.adminData, 'allUsers').subscribe(this.update.bind(this));\n    this.update();\n  }\n\n  attached() {\n    this.update();\n  }\n\n  async validate() {\n    try {\n      const result = await this.controller.validate({object: this});\n      return result.valid;\n    } catch (err){\n      logger.warn('Validation failed with error.', err);\n      return false;\n    }\n  }\n\n  private update() {\n\n    if (!this.adminData || !Array.isArray(this.adminData.allUsers)) {\n      return;\n    }\n    this.users = this.adminData.allUsers;\n    this.selectedUsers = [];\n\n  }\n\n  public async deleteUsers() {\n    if (this.selectedUsers.length <= 0) {\n      return;\n    }\n\n    try {\n      await this.userDeleter.deleteUser(this.selectedUsers);\n      await this.updateService.updateAdminData();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async createUser() {\n    const valid = await this.validate();\n    if (!valid) {\n      return;\n    }\n\n    try {\n      await this.userService.signUp(this.username, this.email, this.password, this.firstName, this.lastName, false);\n      await this.updateService.updateAdminData();\n      this.username = '';\n      this.email = '';\n      this.password = '';\n      this.firstName = '';\n      this.lastName = '';\n    } catch (error) {\n      logger.error('Error during creation of user.');\n    }\n\n  }\n\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {BindingEngine} from 'aurelia-binding';\nimport {AdminData} from \"../../../services/svc/admin/adminData\";\n\n@inject(BindingEngine, AdminData)\nexport class Statistics {\n\n  userNumber: number;\n\n  followingNumber: number;\n\n  tweetNumber: number;\n\n  constructor(be: BindingEngine, private adminData: AdminData) {\n\n    be.propertyObserver(this.adminData, 'allUsers').subscribe(() => {\n      this.update();\n    });\n  }\n\n  attached() {\n    this.update();\n  }\n\n  private update() {\n    if (! this.adminData || !Array.isArray(this.adminData.allUsers)) {\n      return;\n    }\n\n    this.userNumber = this.adminData.allUsers.length;\n\n    let tweets = 0;\n    let following = 0;\n\n    for (const user of this.adminData.allUsers) {\n      tweets += user.tweets.length;\n      following += user.following.length;\n    }\n\n    this.followingNumber = following;\n    this.tweetNumber = tweets;\n  }\n\n}\n","import {inject, LogManager} from 'aurelia-framework'\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {AdminService} from \"../../../services/svc/admin/adminService\";\nimport {ValidationController, ValidationRules} from \"aurelia-validation\";\n\nconst logger = LogManager.getLogger('LoginAdmin');\n\n@inject(EventAggregator, AdminService, ValidationController)\nexport class LoginAdmin {\n\n  username: string;\n  password: string;\n\n  errorMessage: string;\n\n\n  eventAggregator: EventAggregator;\n\n  constructor(ea: EventAggregator, private adminService: AdminService, private controller: ValidationController) {\n    this.eventAggregator = ea;\n\n    ValidationRules\n      .ensure((w: LoginAdmin) => w.username).required()\n      .ensure((w: LoginAdmin) => w.password).required()\n      .on(this);\n  }\n\n  async validate() {\n    try {\n      const result = await this.controller.validate({object: this});\n      return result.valid;\n    } catch (err){\n      logger.warn('Validation failed with error.', err);\n      return false;\n    }\n  }\n\n  async login() {\n    const valid = await this.validate();\n    if (!valid) {\n      return;\n    }\n\n    try {\n      await this.adminService.authenticate(this.username, this.password);\n    } catch (err) {\n      if (err.message) {\n        this.errorMessage = err.message;\n      }\n      this.errorMessage = err;\n    }\n  }\n\n}\n","import {inject, NewInstance, LogManager} from 'aurelia-framework'\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {ValidationRules, ValidationController, validateTrigger} from \"aurelia-validation\";\nimport {UserService} from \"../../../services/svc/user/userService\";\nimport {FailedLogin} from \"../../../services/authMessages\";\n\nconst logger = LogManager.getLogger('NotLoggedIn');\n\n@inject(NewInstance.of(ValidationController), EventAggregator, UserService)\nexport class NotLoggedIn {\n\n  email: string = '';\n  password: string = '';\n  errorMessage: string;\n\n  userService: UserService;\n  controller: ValidationController;\n\n  constructor(vc: ValidationController, ea: EventAggregator, userService: UserService) {\n    this.controller = vc;\n    this.userService = userService;\n\n    ea.subscribe(FailedLogin, (result: FailedLogin) => {\n      if (!result) {\n        return;\n      }\n      if (result.message) {\n        this.errorMessage = result.message;\n      } else {\n        this.errorMessage = 'Unknown error during login. Please try again later.'\n      }\n    });\n\n    this.controller.validateTrigger = validateTrigger.blur;\n    ValidationRules\n      .ensure((v: NotLoggedIn) => v.email).required().email()\n      .ensure((v: NotLoggedIn) => v.password).required().minLength(5)\n      .on(this);\n  }\n\n  async validate() {\n    try {\n      const result = await this.controller.validate({object: this});\n      return result.valid;\n    } catch (err) {\n      logger.error('Error during validation', err);\n      return false;\n    }\n  }\n\n  login() {\n    this.validate().then(isValid => {\n      if (isValid) {\n        this.userService.authenticate(this.email, this.password).then(() => {\n          logger.info('Authenticated without errors');\n          this.errorMessage = '';\n        }). catch( err => {\n          logger.error('Error during authentication.', err);\n        });\n      }\n    });\n  }\n\n}\n","import {inject, LogManager, NewInstance} from 'aurelia-framework'\nimport {ValidationController, ValidationRules} from \"aurelia-validation\";\nimport {UserService} from \"../../../services/svc/user/userService\";\n\nconst logger = LogManager.getLogger('Signup');\n\n@inject(NewInstance.of(ValidationController), UserService)\nexport class Signup {\n\n  signingUp: boolean = false;\n  errorMessage: string;\n\n  username: string = '';\n  password: string = '';\n  email: string = '';\n  firstName: string = '';\n  lastName: string = '';\n\n\n  constructor(private controller: ValidationController, private userService: UserService) {\n    ValidationRules\n      .ensure((s: Signup) => s.username).required().minLength(4)\n      .ensure((s: Signup) => s.password).required().minLength(5)\n      .ensure((s: Signup) => s.email).required().email()\n      .ensure((s: Signup) => s.firstName).required()\n      .ensure((s: Signup) => s.lastName).required()\n      .on(this);\n  }\n\n  async validate() {\n    try {\n      const result = await this.controller.validate({object: this});\n      return result.valid;\n    } catch (err){\n      logger.warn('Validation failed with error.', err);\n      return false;\n    }\n  }\n\n  signup() {\n    this.validate().then(isValid => {\n      if(isValid === true) {\n        this.signingUp = true;\n        this.userService.signUp(this.username, this.email, this.password, this.firstName, this.lastName, true)\n          .then( () => {\n            logger.info('Signup successful');\n          })\n          .catch( err => {\n          logger.error('Error during signup process', err);\n          if (err && err.message) {\n            this.errorMessage = err.message;\n          } else {\n            this.errorMessage = 'Unknown error during signup process. Please try again later.';\n          }\n        })\n      }\n    })\n  }\n\n}\n","export class ActionTimeline {\n\n}\n","import {observable} from 'aurelia-framework';\nimport {IUser} from \"../../../services/svc/user/userUtils\";\n\nexport class Friend {\n\n  defaultFriendStyle: string = \"ui label\";\n\n  @observable()\n  styleClass: string;\n\n  @observable()\n  user: IUser;\n\n  @observable()\n  isActive: boolean;\n\n  constructor(user: IUser) {\n    this.user = user;\n    this.styleClass = this.defaultFriendStyle;\n    this.isActive = false;\n  }\n\n  public setActive(status: boolean) {\n    this.isActive = status;\n    if (status) {\n      this.styleClass = 'ui teal label';\n    } else {\n      this.styleClass = this.defaultFriendStyle;\n    }\n  }\n}\n","import {inject, LogManager} from 'aurelia-framework'\nimport {UserData} from \"../../../services/svc/user/userData\";\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {UpdateSuccess} from \"../../../services/updateMessages\";\nimport {IUser, User} from \"../../../services/svc/user/userUtils\";\nimport {TweetTimeline} from \"../tweetTimeline/tweetTimeline\";\nimport {TimeLineDesc} from \"../tweetTimeline/timelineDesc\";\nimport {Friend} from \"./friend\";\nimport {SwitchToFriend} from \"../../../services/timelineMessage\";\nimport {UserService} from \"../../../services/svc/user/userService\";\n\nconst logger = LogManager.getLogger('FriendsSidebar');\n\n@inject(EventAggregator, UserData, TweetTimeline, UserService)\nexport class FriendsSidebar {\n\n  userData: UserData;\n  friends: Friend[] = [];\n\n\n  constructor(ea: EventAggregator, userData: UserData, private tweetTimeline: TweetTimeline, private userService: UserService) {\n    this.userData = userData;\n\n    ea.subscribe(UpdateSuccess, () => {\n      this.initFriendList();\n    });\n\n    ea.subscribe(SwitchToFriend, switchToFriend => {\n      if (!switchToFriend || !switchToFriend.friend) {\n        this.deactivateFriends();\n        return;\n      }\n      if (!this.canSwitchToFriend(switchToFriend.friend)) {\n        return;\n      }\n      this.viewTimeline(switchToFriend.friend);\n    })\n  }\n\n  attached() {\n    this.initFriendList();\n  }\n\n  private deactivateFriends() {\n    for (const friend of this.friends) {\n      friend.setActive(false);\n    }\n  }\n\n  private canSwitchToFriend(friend: IUser) {\n    const foundFriend = this.getFriend(friend);\n\n    if (!foundFriend || foundFriend.isActive) {\n      return false;\n    }\n    return true;\n  }\n\n  private initFriendList() {\n    if (!Array.isArray(this.userData.userFriends)) {\n      return;\n    }\n\n    this.friends = [];\n    for (const user of this.userData.userFriends) {\n      this.friends.push(new Friend(user));\n    }\n  }\n\n  private getFriend(friend: IUser) {\n    const foundFriend = this.friends.find((registeredFriend: Friend) => {\n      return registeredFriend.user.id === friend.id;\n    });\n\n    if (!foundFriend) {\n      return null;\n    }\n    return foundFriend;\n  }\n\n  private isFriendActive(friend: User | Friend) {\n    let foundFriend : Friend;\n    if (friend instanceof User) {\n      foundFriend = this.getFriend(friend);\n    } else {\n      foundFriend = friend;\n    }\n\n    if (!foundFriend) {\n      return false;\n    }\n\n    return foundFriend.isActive;\n  }\n\n  private isAtLeastOneFriendActive() {\n    let isActive = false;\n    for (const friend of this.friends) {\n      if (friend.isActive) {\n        isActive = true;\n        return isActive;\n      }\n    }\n    return isActive;\n  }\n\n  viewTimeline(friend: IUser) {\n    if (!friend) {\n      return;\n    }\n\n    const foundFriend: Friend = this.getFriend(friend);\n\n    if (this.isFriendActive(foundFriend)) {\n      this.tweetTimeline.removeUser(friend);\n      foundFriend.setActive(false);\n      return;\n    }\n\n\n    if (!this.isAtLeastOneFriendActive()) {\n      foundFriend.setActive(true);\n      const timeLineDesc: TimeLineDesc = new TimeLineDesc(false, `Timeline of ${friend.username}`);\n      this.tweetTimeline.changeTimeline([friend], timeLineDesc);\n      return;\n    }\n\n    foundFriend.setActive(true);\n    this.tweetTimeline.addToCurrent([foundFriend.user], 'Timeline of Friends');\n  }\n\n  unfollow(friend: IUser) {\n    if (!friend) {\n      return;\n    }\n\n    const friendIndex = this.userData.loggedInUser.following.indexOf(friend.id);\n    this.userData.loggedInUser.following.splice(friendIndex, 1);\n\n    this.userService.updateUser(this.userData.loggedInUser, false).then(updateResult => {\n      logger.info('Received update result.')\n    }).catch(err => {\n      logger.error('Error while unfollowing friend.', err)\n    });\n  }\n\n  displayFirehose() {\n    this.initFriendList();\n    const timeLineDesc: TimeLineDesc = new TimeLineDesc(false, 'Firehose');\n    this.tweetTimeline.changeTimeline(this.userData.allUsers, timeLineDesc);\n  }\n\n}\n","import {ITweet} from \"../../../services/svc/tweet/tweetUtils\";\n\nexport class TweetWrapper {\n\n  tweet: ITweet;\n  isLoggedInUser: boolean;\n  isFriend: boolean;\n  isSelected: boolean;\n\n  constructor(tweet: ITweet, isLoggedInUser: boolean, isFriend: boolean) {\n    this.tweet = tweet;\n    this.isLoggedInUser = isLoggedInUser;\n    this.isFriend = isFriend;\n    this.isSelected = false;\n  }\n\n  public invertSelection() {\n    this.isSelected = ! this.isSelected;\n  }\n}\n","export class asyncBindingBehavior {\n\n  bind(binding, source, busymessage) {\n    binding.originalupdateTarget = binding.updateTarget;\n    binding.updateTarget = (a) => {\n      if (typeof a.then === 'function') {\n        if (busymessage)\n          binding.originalupdateTarget(busymessage);\n        a.then(d => { binding.originalupdateTarget(d); });\n      }\n      else\n        binding.originalupdateTarget(a);\n    };\n  }\n\n  unbind(binding) {\n    binding.updateTarget = binding.originalupdateTarget;\n    binding.originalupdateTarget = null;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {ImageService} from \"../../../services/svc/imageService\";\n\n@inject(ImageService)\nexport class CurrencyFormatValueConverter {\n\n  constructor(private imageService: ImageService) {\n\n  }\n\n  toView(value) {\n    if (!value) {\n      return '';\n    }\n\n    return this.imageService.getUrlForImageId(value.image);\n  }\n}\n","export class TimeLineDesc {\n  isLoggedInUser: boolean;\n  title: string;\n\n  constructor(isLoggedInUser: boolean, title:string) {\n    this.isLoggedInUser = isLoggedInUser;\n    this.title = title;\n  }\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {ITweet} from \"../../../services/svc/tweet/tweetUtils\";\nimport {UserData} from \"../../../services/svc/user/userData\";\nimport {IUser} from \"../../../services/svc/user/userUtils\";\nimport {BindingEngine} from 'aurelia-binding';\nimport {TimeLineDesc} from \"./timelineDesc\";\nimport {ValidationController, ValidationRules} from \"aurelia-validation\";\nimport {TweetService} from \"../../../services/svc/tweet/tweetService\";\nimport {ImageService} from \"../../../services/svc/imageService\";\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {SwitchToFriend} from \"../../../services/timelineMessage\";\nimport {UserService} from \"../../../services/svc/user/userService\";\nimport {TweetWrapper} from \"./TweetWrapper\";\nimport {TweetDeleter} from \"../../../services/svc/tweet/tweetDeleter\";\nimport {UpdateRequest} from \"../../../services/updateMessages\";\n\nconst logger = LogManager.getLogger('TweetTimeline');\n\n@inject(UserData, BindingEngine, ValidationController, TweetService, ImageService, EventAggregator, UserService, TweetDeleter)\nexport class TweetTimeline {\n\n  tweets: TweetWrapper[];\n  userData: UserData;\n  timelineDescription: TimeLineDesc;\n\n  content: string;\n  image: FileList;\n  validationController: ValidationController;\n  creationError: string;\n\n  oneSelected: boolean;\n\n\n  constructor(userData: UserData, be: BindingEngine, vc: ValidationController, private tweetService: TweetService,\n              private imageService: ImageService, private eventAggregator: EventAggregator,\n              private userService: UserService, private tweetDeleter: TweetDeleter) {\n    this.tweets = [];\n    this.userData = userData;\n\n    this.validationController = vc;\n    ValidationRules\n      .ensure((t: TweetTimeline) => t.content).required().minLength(1).maxLength(140)\n      .on(this);\n\n    be.propertyObserver(this.userData, 'loggedInUser').subscribe(newValue => {\n      logger.info('Logged in user changed.');\n      this.update();\n    })\n  }\n\n  attached() {\n    this.update();\n  }\n\n  private update() {\n    if (this.userData && this.userData.loggedInUser) {\n      this.updateTimeline([this.userData.loggedInUser]);\n      this.updateSelectionFlag();\n    }\n  }\n\n  public changeTimeline(users: IUser[], timelineDesc: TimeLineDesc) {\n    logger.info(`Changeing timeline to: ${timelineDesc.title}`);\n    this.updateTimeline(users);\n    this.timelineDescription = timelineDesc;\n  }\n\n  private updateTimeline(users: IUser[]) {\n    logger.info('Updating timeline for users.');\n    if (!Array.isArray(users)) {\n      return;\n    }\n    this.tweets = [];\n    this.timelineDescription = new TimeLineDesc(true, 'Your Timeline');\n\n    this.addToCurrent(users, null);\n  }\n\n  private isTweetOfLoggedInUser(tweet: ITweet) {\n    if (!tweet || !tweet.poster || !tweet.poster.id || !this.userData.loggedInUser.id) {\n      return false;\n    }\n    return this.userData.loggedInUser.id === tweet.poster.id;\n  }\n\n  private isTweetOfUserFriend(tweet: ITweet) {\n    if (!tweet || !tweet.poster || !tweet.poster.id || !this.userData.loggedInUser.following) {\n      return false;\n    }\n\n    for (const userId of this.userData.loggedInUser.following) {\n      if (userId === tweet.poster.id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public addToCurrent(users: IUser[], newTitle: string) {\n    if (!Array.isArray(users)) {\n      return;\n    }\n\n    for (const user of users) {\n      if (user.tweets) {\n        for (const tweet of user.tweets) {\n          this.tweets.push(new TweetWrapper(tweet, this.isTweetOfLoggedInUser(tweet), this.isTweetOfUserFriend(tweet)))\n        }\n      }\n    }\n    this.tweets.sort(TweetTimeline.tweetUpdatedAtComparator);\n\n    if (newTitle) {\n      this.timelineDescription.title = newTitle;\n    }\n  }\n\n  public getSelected() {\n    if (!Array.isArray(this.tweets)) {\n      return [];\n    }\n    return this.tweets.filter((tw: TweetWrapper) => {\n      return tw.isSelected;\n    });\n  }\n\n  public deleteAll() {\n    this.tweetDeleter.deleteTweets(this.userData.loggedInUser.tweets, true).then(() => {\n      this.eventAggregator.publish(new UpdateRequest(this.userData.loggedInUser.id));\n    }).catch(err => {\n      logger.error('Error while deleting tweets.', err);\n    });\n  }\n\n  public deleteSelected() {\n    const selected: TweetWrapper[] = this.getSelected();\n    const tweets: ITweet[] = selected.map((tw:TweetWrapper) => {\n      return tw.tweet;\n    });\n    this.tweetDeleter.deleteTweets(tweets, true).then(() => {\n      this.eventAggregator.publish(new UpdateRequest(this.userData.loggedInUser.id));\n    }).catch(err => {\n      logger.error('Error while deleting tweets.', err);\n    });\n  }\n\n  public selectCard(tweetWrapper: TweetWrapper) {\n    if (!tweetWrapper.isLoggedInUser) {\n      return;\n    }\n    tweetWrapper.invertSelection();\n    this.updateSelectionFlag();\n  }\n\n  private updateSelectionFlag() {\n    const selected = this.getSelected();\n    if (selected.length <= 0) {\n      this.oneSelected = false;\n    } else {\n      this.oneSelected = true;\n    }\n  }\n\n  public removeUser(user: IUser) {\n    if (!user || !(Array.isArray(user.tweets))) {\n      return;\n    }\n    this.tweets = this.tweets.filter((tweetWrapper: TweetWrapper) => {\n      let notOfUser: boolean = true;\n      for (const userTweet of user.tweets) {\n        if (userTweet.id === tweetWrapper.tweet.id) {\n          notOfUser = false;\n        }\n      }\n      return notOfUser;\n    });\n\n    this.tweets.sort(TweetTimeline.tweetUpdatedAtComparator);\n\n    if (this.tweets.length <= 0) {\n      this.updateTimeline([this.userData.loggedInUser])\n    }\n  }\n\n  public toOwnTimeline() {\n    this.eventAggregator.publish(new SwitchToFriend(null));\n    this.updateTimeline([this.userData.loggedInUser]);\n  }\n\n  public static tweetUpdatedAtComparator(tweet1: TweetWrapper, tweet2: TweetWrapper) {\n    const date1: number = Date.parse(tweet1.tweet.createdAt);\n    const date2: number = Date.parse(tweet2.tweet.createdAt);\n    if (isNaN(date1) || isNaN(date2)) {\n      logger.warn('Tweet dates could not be parsed to a number', date1, date2);\n      return 0;\n    }\n    return date1 - date2;\n  }\n\n  public followUser(user: IUser) {\n    if (!user) {\n      return;\n    }\n\n    const isUserFollowing = this.userData.loggedInUser.following.indexOf(user.id);\n    if (isUserFollowing !== -1) {\n      logger.warn('User already follows the given user', user.id);\n      return;\n    }\n\n    this.userData.loggedInUser.following.push(user.id);\n    this.userService.updateUser(this.userData.loggedInUser, null).then(() => {\n      logger.info('Successfully following friend', user.username);\n    }).catch(err => {\n      logger.error('Could not follow friend.', err);\n    });\n  }\n\n  public switchToFriend(friend: IUser) {\n    if (friend.id === this.userData.loggedInUser.id) {\n      this.updateTimeline([this.userData.loggedInUser]);\n      friend = null;\n    }\n\n    if (friend) {\n      const friendIndex = this.userData.loggedInUser.following.indexOf(friend.id);\n      if (friendIndex === -1) {\n        const description: TimeLineDesc = new TimeLineDesc(false, `Timeline of: ${friend.username}`);\n        this.changeTimeline([friend], description);\n      }\n    }\n\n    this.eventAggregator.publish(new SwitchToFriend(friend));\n  }\n\n  public async createTweet() {\n    if (!this.validate()) {\n      return;\n    }\n\n    let file: File = null;\n    if (this.image) {\n      file = this.image.item(0);\n    }\n    const newTweet: ITweet = await this.tweetService.createTweet(file, this.content);\n    if (!newTweet) {\n      logger.error('Creation of tweet failed');\n      this.creationError = 'An unexpected error happened while we created your tweet. Please do some voodoo and try it again.';\n      return;\n    }\n    this.content = '';\n    this.image = null;\n    this.addTweetToLoggedInUser(newTweet);\n  }\n\n  private addTweetToLoggedInUser(tweet: ITweet) {\n    this.userData.loggedInUser.tweets.push(tweet);\n    this.userService.updateUser(this.userData.loggedInUser, null).then(() => {\n      logger.info('Finished updating user.');\n    }).catch(err => {\n      logger.error('Error during update of user.', err);\n    });\n  }\n\n  private async validate() {\n    try {\n      const validationResult = await this.validationController.validate({object: this});\n      return validationResult.valid;\n    } catch (err) {\n      logger.error('Error during tweet validation.', err);\n      return false;\n    }\n  }\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {ValidationRules, ValidationController} from \"aurelia-validation\";\nimport {UserService} from \"../../../services/svc/user/userService\";\nimport {UserData} from \"../../../services/svc/user/userData\";\nimport {BindingEngine} from 'aurelia-binding';\nimport {TweetTimeline} from \"../tweetTimeline/tweetTimeline\";\n\nconst logger = LogManager.getLogger('UserSettings');\n\n@inject(UserData, UserService, BindingEngine, TweetTimeline, ValidationController)\nexport class UserSettings {\n\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n\n  successMessage: string;\n  errorMessage: string;\n\n  controller: ValidationController;\n\n  constructor(private userData: UserData, private userService: UserService, private bindingEngine: BindingEngine,\n              private tweetTimeline: TweetTimeline, vc: ValidationController) {\n    this.controller = vc;\n\n    bindingEngine.propertyObserver(this.userData, 'loggedInUser').subscribe(newValue => {\n      this.updateData();\n    });\n\n    if (this.userData.loggedInUser) {\n      this.updateData();\n    }\n\n    ValidationRules\n      .ensure((s: UserSettings) => s.username).required().minLength(4)\n      .ensure((s: UserSettings) => s.password).required().minLength(5)\n      .ensure((s: UserSettings) => s.email).required().email()\n      .ensure((s: UserSettings) => s.firstName).required()\n      .ensure((s: UserSettings) => s.lastName).required()\n      .on(this);\n  }\n\n  private updateData() {\n    this.username = this.userData.loggedInUser.username;\n    this.password = this.userData.loggedInUser.password;\n    this.email = this.userData.loggedInUser.email;\n    this.firstName = this.userData.loggedInUser.firstName;\n    this.lastName = this.userData.loggedInUser.lastName;\n  }\n\n  async validate() {\n    try {\n      const result = await this.controller.validate({object: this});\n      return result.valid;\n    } catch (err){\n      logger.warn('Validation failed with error.', err);\n      return false;\n    }\n  }\n\n  public async update() {\n    const valid = await this.validate();\n    if (!valid) {\n      return;\n    }\n    this.executeUpdate();\n  }\n\n  public executeUpdate() {\n    const user = this.userData.loggedInUser;\n    user.username = this.username;\n    user.password = this.password;\n    user.email = this.email;\n    user.firstName = this.firstName;\n    user.lastName = this.lastName;\n\n    this.userService.updateUser(user, false).then(() => {\n      logger.info('Successfully updated user.');\n      this.successMessage = 'Update was successful.';\n        this.tweetTimeline.toOwnTimeline();\n    }).catch(err => {\n      logger.error('Error updating user.', err);\n      this.successMessage = null;\n      this.errorMessage = 'An error happened during saving your changes.'\n    });\n  }\n\n\n}\n","import {IUser} from \"../user/userUtils\";\n\nexport class AdminData {\n\n  allUsers: IUser[];\n}\n","import {inject, LogManager} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {FetchClient} from '../../FetchClient';\nimport FetchConfig from '../../fetchConfigLocal'\nimport {AuthRole, LoginMessage} from \"../../authMessages\";\nimport {UserService} from \"../user/userService\";\nimport {AdminData} from \"./adminData\";\nimport {UpdateService} from \"../user/updateService\";\n\nconst logger = LogManager.getLogger('AdminService');\n\n@inject(EventAggregator, FetchClient, FetchConfig, UserService, AdminData, UpdateService)\nexport class AdminService {\n\n  fetchClient: FetchClient;\n  eventAggregator: EventAggregator;\n  fetchConfig: FetchConfig;\n\n\n  constructor(ea: EventAggregator, fetchClient: FetchClient, fetchConfig: FetchConfig, private userService: UserService,\n              private adminData: AdminData, private updateService: UpdateService) {\n    this.eventAggregator = ea;\n    this.fetchClient = fetchClient;\n    this.fetchConfig = fetchConfig;\n  }\n\n  async authenticate(username: string, password: string) {\n    const authBody = {\n      username: username,\n      password: password\n    };\n\n    const authUrl = this.fetchConfig.adminsPart + this.fetchConfig.authPart;\n\n    this.fetchClient.postJSON(authUrl, authBody).then(authResult => {\n      if (authResult.success && authResult.token) {\n        FetchClient.setAuthToken(authResult.token);\n        this.updateService.updateAdminData().then(() => {\n          logger.info('Updated all users for admin data');\n        });\n        this.eventAggregator.publish(new LoginMessage(AuthRole.ADMIN, true, false));\n      } else {\n        const loginEvent = new LoginMessage(AuthRole.ADMIN, false, true);\n        if (authResult.message) {\n          loginEvent.message = authResult.message;\n        }\n        this.eventAggregator.publish(loginEvent);\n        throw loginEvent;\n      }\n    }).catch(err => {\n      if (err) {\n        logger.error('Error during authentication', err);\n      }\n      const loginEvent = new LoginMessage(AuthRole.ADMIN, false, true);\n      if (err.message) {\n        loginEvent.message = err.message;\n      }\n\n      this.eventAggregator.publish(loginEvent);\n      if (err) {\n        throw err;\n      }\n    })\n  }\n\n}\n","import {IUser} from \"../../../services/svc/user/userUtils\";\n\nexport class UserWrapper {\n\n  user: IUser;\n  isSelected: boolean;\n\n  constructor(user: IUser) {\n    this.user = user;\n    this.isSelected = false;\n  }\n}\n","import {inject} from \"aurelia-framework\";\nimport {IUser} from \"./userUtils\";\nimport {ITweet} from \"../tweet/tweetUtils\";\nimport {TweetDeleter} from \"../tweet/tweetDeleter\";\nimport {UserService} from \"./userService\";\n\n@inject(TweetDeleter, UserService)\nexport class UserDeleter {\n\n  constructor(private tweetDeleter: TweetDeleter, private userService: UserService) {\n\n  }\n\n  public async deleteUser (users: IUser[]) {\n    if (!Array.isArray(users)) {\n      return false;\n    }\n\n    const tweetsToDelete = UserDeleter.getTweetsToDelete(users);\n    const deletionPromiseTweets = this.tweetDeleter.deleteTweets(tweetsToDelete, false);\n    const deletionPromiseUsers = this.userService.deleteUsers(users);\n    await deletionPromiseTweets;\n    await deletionPromiseUsers;\n    return true;\n  }\n\n  private static getTweetsToDelete(users : IUser[]) {\n    if (!Array.isArray(users)) {\n      return [];\n    }\n\n    let tweets: ITweet[] = [];\n    for (const user of users) {\n      if (!Array.isArray(user.tweets)) {\n        continue;\n      }\n\n      tweets = tweets.concat(user.tweets);\n    }\n\n    return tweets;\n  }\n\n}\n"],"sourceRoot":".."}